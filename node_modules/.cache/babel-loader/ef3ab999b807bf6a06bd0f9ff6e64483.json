{"ast":null,"code":"var _jsxFileName = \"/home/ecom/Project/find-my-freelancer/src/components/homepage/search.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Img from \"../../static/img\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n  > input {\n    border: 1px solid #999;\n    padding: 0.5rem;\n    width: 60%;\n    height: 16%;\n    @media only screen and (max-width: ${props => props.theme.bpsm}) {\n      width: 60%;\n    }\n  }\n`;\nconst SelectTitle = styled.div`\n  display: flex;\n  > p {\n    font-size: 16px;\n    font-weight: bolder;\n    margin-bottom: 0px;\n  }\n`;\nconst SelectOption = styled.ul`\n  background-color: #fff;\n  list-style-type: none;\n  > li {\n    font-size: 16px;\n    font-weight: bolder;\n    border-bottom: 1px dotted #888;\n    padding: 5px;\n    background: #fff;\n  }\n`;\nconst SearchButton = styled.button`\n  width: 5%;\n  border-radius: 0px 5px 5px 0px;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: linear-gradient(to right, #00ff00 0%, #00ffff 100%);\n  > img {\n    width: 50%;\n  }\n  @media only screen and (max-width: 992px) {\n    width: 20%;\n  }\n`; // const menu = (\n//   <Menu onClick={onClick}>\n//     <Menu.Item key=\"1\">1st menu item</Menu.Item>\n//     <Menu.Item key=\"2\">2nd memu item</Menu.Item>\n//     <Menu.Item key=\"3\">3rd menu item</Menu.Item>\n//   </Menu>\n// );\n\nclass Search extends Component {\n  //   static propTypes = {\n  //     suggestions: PropTypes.instanceOf(Array)\n  //   };\n  //   static defaultProps = {\n  //     suggestions: []\n  //   };\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //       // The active selection's index\n  //       activeSuggestion: 0,\n  //       // The suggestions that match the user's input\n  //       filteredSuggestions: [],\n  //       // Whether or not the suggestion list is shown\n  //       showSuggestions: false,\n  //       // What the user has entered\n  //       userInput: \"\",\n  //       showSelect: false,\n  //       selected: \"\"\n  //     };\n  //   }\n  //   // Event fired when the input value is changed\n  //   onChange = e => {\n  //     const { suggestions } = this.props;\n  //     const { selected } = this.props;\n  //     const userInput = e.currentTarget.value;\n  //     let filteredSuggestions = [];\n  //     // Filter our suggestions that don't contain the user's input\n  //     if (selected == \"First\") {\n  //       filteredSuggestions = suggestions.filter(\n  //         suggestion =>\n  //           suggestion.first_name.toLowerCase().indexOf(userInput.toLowerCase()) >\n  //           -1\n  //       );\n  //     } else if (selected == \"Last\") {\n  //       filteredSuggestions = suggestions.filter(\n  //         suggestion =>\n  //           suggestion.last_name.toLowerCase().indexOf(userInput.toLowerCase()) >\n  //           -1\n  //       );\n  //     } else {\n  //       filteredSuggestions = suggestions.filter(\n  //         suggestion =>\n  //           suggestion.email.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n  //       );\n  //     }\n  //     // Update the user input and filtered suggestions, reset the active\n  //     // suggestion and make sure the suggestions are shown\n  //     this.setState({\n  //       activeSuggestion: 0,\n  //       filteredSuggestions,\n  //       showSuggestions: true,\n  //       userInput: e.currentTarget.value\n  //     });\n  //   };\n  //   // Event fired when the user clicks on a suggestion\n  //   onClick = e => {\n  //     // Update the user input and reset the rest of the state\n  //     this.setState({\n  //       activeSuggestion: 0,\n  //       filteredSuggestions: [],\n  //       showSuggestions: false,\n  //       userInput: e.currentTarget.innerText\n  //     });\n  //   };\n  //   // Event fired when the user presses a key down\n  //   onKeyDown = e => {\n  //     const { activeSuggestion, filteredSuggestions } = this.state;\n  //     const { selected } = this.props;\n  //     // User pressed the enter key, update the input and close the\n  //     // suggestions\n  //     if (e.keyCode === 13) {\n  //       console.log(selected, \"suggestion\");\n  //       if (selected == \"First\") {\n  //         this.setState({\n  //           activeSuggestion: 0,\n  //           showSuggestions: false,\n  //           userInput: filteredSuggestions[activeSuggestion].first_name\n  //         });\n  //       } else if (selected == \"Last\") {\n  //         this.setState({\n  //           activeSuggestion: 0,\n  //           showSuggestions: false,\n  //           userInput: filteredSuggestions[activeSuggestion].last_name\n  //         });\n  //       } else if (selected == \"Email\") {\n  //         this.setState({\n  //           activeSuggestion: 0,\n  //           showSuggestions: false,\n  //           userInput: filteredSuggestions[activeSuggestion].email\n  //         });\n  //       }\n  //     }\n  //     // User pressed the up arrow, decrement the index\n  //     else if (e.keyCode === 38) {\n  //       if (activeSuggestion === 0) {\n  //         return;\n  //       }\n  //       this.setState({ activeSuggestion: activeSuggestion - 1 });\n  //     }\n  //     // User pressed the down arrow, increment the index\n  //     else if (e.keyCode === 40) {\n  //       if (activeSuggestion - 1 === filteredSuggestions.length) {\n  //         return;\n  //       }\n  //       this.setState({ activeSuggestion: activeSuggestion + 1 });\n  //     }\n  //   };\n  //   handleSelect = () => {\n  //     this.setState({\n  //       showSelect: !this.state.showSelect\n  //     });\n  //   };\n  render() {\n    const {\n      onChange,\n      userInput,\n      onKeyDown,\n      suggestionsListComponent\n    } = this.props;\n    const {\n      selected\n    } = this.props; // let suggestionsListComponent;\n    // if (showSuggestions && userInput) {\n    //   if (filteredSuggestions.length) {\n    //     suggestionsListComponent = (\n    //       <ul class=\"suggestions\">\n    //         {filteredSuggestions.map((suggestion, index) => {\n    //           let className;\n    //           // Flag the active suggestion with a class\n    //           if (index === activeSuggestion) {\n    //             className = \"suggestion-active\";\n    //           }\n    //           if (selected == \"First\") {\n    //             return (\n    //               <li className={className} key={index} onClick={onClick}>\n    //                 {suggestion.first_name}\n    //               </li>\n    //             );\n    //           } else if (selected == \"Last\") {\n    //             return (\n    //               <li className={className} key={index} onClick={onClick}>\n    //                 {suggestion.last_name}\n    //               </li>\n    //             );\n    //           } else if (selected == \"Email\") {\n    //             return (\n    //               <li className={className} key={index} onClick={onClick}>\n    //                 {suggestion.email}\n    //               </li>\n    //             );\n    //           }\n    //         })}\n    //       </ul>\n    //     );\n    //   } else {\n    //     suggestionsListComponent = (\n    //       <div class=\"no-suggestions\">\n    //         <em>No suggestions, you're on your own!</em>\n    //       </div>\n    //     );\n    //   }\n    // }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }), suggestionsListComponent), /*#__PURE__*/React.createElement(SearchButton, {\n      onClick: this.props.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Img.Search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Search;\n{\n  /* <SelectOption>\n  <li onClick={() => this.selectFilter(\"First\")}>First name</li>\n  <li onClick={() => this.selectFilter(\"Last\")}>Last Name</li>\n  <li onClick={() => this.selectFilter(\"Email\")}>Email</li>\n  </SelectOption> */\n}","map":{"version":3,"sources":["/home/ecom/Project/find-my-freelancer/src/components/homepage/search.js"],"names":["React","Component","Fragment","PropTypes","styled","Img","Container","div","props","theme","bpsm","SelectTitle","SelectOption","ul","SearchButton","button","Search","render","onChange","userInput","onKeyDown","suggestionsListComponent","selected","handleSearch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;yCASYC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAK;;;;CATnE;AAeA,MAAMC,WAAW,GAAGP,MAAM,CAACG,GAAI;;;;;;;CAA/B;AASA,MAAMK,YAAY,GAAGR,MAAM,CAACS,EAAG;;;;;;;;;;CAA/B;AAYA,MAAMC,YAAY,GAAGV,MAAM,CAACW,MAAO;;;;;;;;;;;;;;;CAAnC,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAN,SAAqBf,SAArgB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,QADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,SAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKb,KALT;AAOA,UAAM;AAAEc,MAAAA;AAAF,QAAe,KAAKd,KAA1B,CARO,CAUP;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEU,QAFZ;AAGE,MAAA,SAAS,EAAEE,SAHb;AAIE,MAAA,KAAK,EAAED,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOGE,wBAPH,CADF,eAWE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWe,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAElB,GAAG,CAACW,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,CADF;AAiBD;;AArM4B;;AAwM/B,eAAeA,MAAf;AAEA;AACE;;;;;AAKD","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Img from \"../../static/img\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n  > input {\n    border: 1px solid #999;\n    padding: 0.5rem;\n    width: 60%;\n    height: 16%;\n    @media only screen and (max-width: ${props => props.theme.bpsm}) {\n      width: 60%;\n    }\n  }\n`;\n\nconst SelectTitle = styled.div`\n  display: flex;\n  > p {\n    font-size: 16px;\n    font-weight: bolder;\n    margin-bottom: 0px;\n  }\n`;\n\nconst SelectOption = styled.ul`\n  background-color: #fff;\n  list-style-type: none;\n  > li {\n    font-size: 16px;\n    font-weight: bolder;\n    border-bottom: 1px dotted #888;\n    padding: 5px;\n    background: #fff;\n  }\n`;\n\nconst SearchButton = styled.button`\n  width: 5%;\n  border-radius: 0px 5px 5px 0px;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: linear-gradient(to right, #00ff00 0%, #00ffff 100%);\n  > img {\n    width: 50%;\n  }\n  @media only screen and (max-width: 992px) {\n    width: 20%;\n  }\n`;\n\n// const menu = (\n//   <Menu onClick={onClick}>\n//     <Menu.Item key=\"1\">1st menu item</Menu.Item>\n//     <Menu.Item key=\"2\">2nd memu item</Menu.Item>\n//     <Menu.Item key=\"3\">3rd menu item</Menu.Item>\n//   </Menu>\n// );\n\nclass Search extends Component {\n  //   static propTypes = {\n  //     suggestions: PropTypes.instanceOf(Array)\n  //   };\n\n  //   static defaultProps = {\n  //     suggestions: []\n  //   };\n\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.state = {\n  //       // The active selection's index\n  //       activeSuggestion: 0,\n  //       // The suggestions that match the user's input\n  //       filteredSuggestions: [],\n  //       // Whether or not the suggestion list is shown\n  //       showSuggestions: false,\n  //       // What the user has entered\n  //       userInput: \"\",\n  //       showSelect: false,\n  //       selected: \"\"\n  //     };\n  //   }\n\n  //   // Event fired when the input value is changed\n  //   onChange = e => {\n  //     const { suggestions } = this.props;\n  //     const { selected } = this.props;\n  //     const userInput = e.currentTarget.value;\n  //     let filteredSuggestions = [];\n  //     // Filter our suggestions that don't contain the user's input\n  //     if (selected == \"First\") {\n  //       filteredSuggestions = suggestions.filter(\n  //         suggestion =>\n  //           suggestion.first_name.toLowerCase().indexOf(userInput.toLowerCase()) >\n  //           -1\n  //       );\n  //     } else if (selected == \"Last\") {\n  //       filteredSuggestions = suggestions.filter(\n  //         suggestion =>\n  //           suggestion.last_name.toLowerCase().indexOf(userInput.toLowerCase()) >\n  //           -1\n  //       );\n  //     } else {\n  //       filteredSuggestions = suggestions.filter(\n  //         suggestion =>\n  //           suggestion.email.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n  //       );\n  //     }\n\n  //     // Update the user input and filtered suggestions, reset the active\n  //     // suggestion and make sure the suggestions are shown\n  //     this.setState({\n  //       activeSuggestion: 0,\n  //       filteredSuggestions,\n  //       showSuggestions: true,\n  //       userInput: e.currentTarget.value\n  //     });\n  //   };\n\n  //   // Event fired when the user clicks on a suggestion\n  //   onClick = e => {\n  //     // Update the user input and reset the rest of the state\n  //     this.setState({\n  //       activeSuggestion: 0,\n  //       filteredSuggestions: [],\n  //       showSuggestions: false,\n  //       userInput: e.currentTarget.innerText\n  //     });\n  //   };\n\n  //   // Event fired when the user presses a key down\n  //   onKeyDown = e => {\n  //     const { activeSuggestion, filteredSuggestions } = this.state;\n  //     const { selected } = this.props;\n\n  //     // User pressed the enter key, update the input and close the\n  //     // suggestions\n  //     if (e.keyCode === 13) {\n  //       console.log(selected, \"suggestion\");\n  //       if (selected == \"First\") {\n  //         this.setState({\n  //           activeSuggestion: 0,\n  //           showSuggestions: false,\n  //           userInput: filteredSuggestions[activeSuggestion].first_name\n  //         });\n  //       } else if (selected == \"Last\") {\n  //         this.setState({\n  //           activeSuggestion: 0,\n  //           showSuggestions: false,\n  //           userInput: filteredSuggestions[activeSuggestion].last_name\n  //         });\n  //       } else if (selected == \"Email\") {\n  //         this.setState({\n  //           activeSuggestion: 0,\n  //           showSuggestions: false,\n  //           userInput: filteredSuggestions[activeSuggestion].email\n  //         });\n  //       }\n  //     }\n  //     // User pressed the up arrow, decrement the index\n  //     else if (e.keyCode === 38) {\n  //       if (activeSuggestion === 0) {\n  //         return;\n  //       }\n\n  //       this.setState({ activeSuggestion: activeSuggestion - 1 });\n  //     }\n  //     // User pressed the down arrow, increment the index\n  //     else if (e.keyCode === 40) {\n  //       if (activeSuggestion - 1 === filteredSuggestions.length) {\n  //         return;\n  //       }\n\n  //       this.setState({ activeSuggestion: activeSuggestion + 1 });\n  //     }\n  //   };\n\n  //   handleSelect = () => {\n  //     this.setState({\n  //       showSelect: !this.state.showSelect\n  //     });\n  //   };\n\n  render() {\n    const {\n      onChange,\n      userInput,\n      onKeyDown,\n      suggestionsListComponent\n    } = this.props;\n\n    const { selected } = this.props;\n\n    // let suggestionsListComponent;\n\n    // if (showSuggestions && userInput) {\n    //   if (filteredSuggestions.length) {\n    //     suggestionsListComponent = (\n    //       <ul class=\"suggestions\">\n    //         {filteredSuggestions.map((suggestion, index) => {\n    //           let className;\n\n    //           // Flag the active suggestion with a class\n    //           if (index === activeSuggestion) {\n    //             className = \"suggestion-active\";\n    //           }\n    //           if (selected == \"First\") {\n    //             return (\n    //               <li className={className} key={index} onClick={onClick}>\n    //                 {suggestion.first_name}\n    //               </li>\n    //             );\n    //           } else if (selected == \"Last\") {\n    //             return (\n    //               <li className={className} key={index} onClick={onClick}>\n    //                 {suggestion.last_name}\n    //               </li>\n    //             );\n    //           } else if (selected == \"Email\") {\n    //             return (\n    //               <li className={className} key={index} onClick={onClick}>\n    //                 {suggestion.email}\n    //               </li>\n    //             );\n    //           }\n    //         })}\n    //       </ul>\n    //     );\n    //   } else {\n    //     suggestionsListComponent = (\n    //       <div class=\"no-suggestions\">\n    //         <em>No suggestions, you're on your own!</em>\n    //       </div>\n    //     );\n    //   }\n    // }\n\n    return (\n      <Fragment>\n        <Container>\n          <input\n            type=\"text\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n          {suggestionsListComponent}\n        </Container>\n\n        <SearchButton onClick={this.props.handleSearch}>\n          <img src={Img.Search} />\n        </SearchButton>\n      </Fragment>\n    );\n  }\n}\n\nexport default Search;\n\n{\n  /* <SelectOption>\n<li onClick={() => this.selectFilter(\"First\")}>First name</li>\n<li onClick={() => this.selectFilter(\"Last\")}>Last Name</li>\n<li onClick={() => this.selectFilter(\"Email\")}>Email</li>\n</SelectOption> */\n}\n"]},"metadata":{},"sourceType":"module"}