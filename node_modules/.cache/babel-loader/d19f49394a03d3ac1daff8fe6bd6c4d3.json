{"ast":null,"code":"var _jsxFileName = \"/home/ecom/Project/find-my-freelancer/src/components/homepage/autocomplete.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class Autocomplete extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: \"\"\n    };\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredOptions = suggestions.filter(option => option.first_name.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeOption: 0,\n        filteredOptions,\n        showOptions: true,\n        userInput\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeOption: 0,\n        filteredOption: [],\n        showOptions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeOption,\n        filteredOptions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeOption: 0,\n          showSuggestions: false,\n          userInput: filteredOptions[activeOption]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeOption === 0) {\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption - 1\n        });\n      } else if (e.keyCode === 40) {\n        if (activeOption - 1 === filteredOptions.length) {\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption + 1\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onKeyDown,\n      onClick,\n      state: {\n        activeOption,\n        filteredOptions,\n        showOptions,\n        userInput\n      }\n    } = this;\n    const {\n      suggestions\n    } = this.props;\n    let optionList;\n\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"options\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, filteredOptions.map((optionName, index) => {\n          let className;\n\n          if (index === activeOption) {\n            className = \"option-active\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: className,\n            key: optionName,\n            onClick: onClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }\n          }, optionName.first_name);\n        }));\n      } else {\n        optionList = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"no-options\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, \"No Option!\"));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-box\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), optionList));\n  }\n\n}\nAutocomplete.propTypes = {\n  options: PropTypes.instanceOf(Array).isRequired\n};\nexport default Autocomplete;","map":{"version":3,"sources":["/home/ecom/Project/find-my-freelancer/src/components/homepage/autocomplete.js"],"names":["React","Component","PropTypes","Autocomplete","state","activeOption","filteredOptions","showOptions","userInput","onChange","e","suggestions","props","currentTarget","value","filter","option","first_name","toLowerCase","indexOf","setState","onClick","filteredOption","innerText","onKeyDown","keyCode","showSuggestions","length","render","optionList","map","optionName","index","className","propTypes","options","instanceOf","Array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class Autocomplete extends Component {\n  static propTypes = {\n    options: PropTypes.instanceOf(Array).isRequired\n  };\n  state = {\n    activeOption: 0,\n    filteredOptions: [],\n    showOptions: false,\n    userInput: \"\"\n  };\n\n  onChange = e => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredOptions = suggestions.filter(\n      option =>\n        option.first_name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n    this.setState({\n      activeOption: 0,\n      filteredOptions,\n      showOptions: true,\n      userInput\n    });\n  };\n\n  onClick = e => {\n    this.setState({\n      activeOption: 0,\n      filteredOption: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n\n  onKeyDown = e => {\n    const { activeOption, filteredOptions } = this.state;\n    if (e.keyCode === 13) {\n      this.setState({\n        activeOption: 0,\n        showSuggestions: false,\n        userInput: filteredOptions[activeOption]\n      });\n    } else if (e.keyCode === 38) {\n      if (activeOption === 0) {\n        return;\n      }\n      this.setState({ activeOption: activeOption - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeOption - 1 === filteredOptions.length) {\n        return;\n      }\n      this.setState({ activeOption: activeOption + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onKeyDown,\n      onClick,\n      state: { activeOption, filteredOptions, showOptions, userInput }\n    } = this;\n    const { suggestions } = this.props;\n    let optionList;\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = (\n          <ul className=\"options\">\n            {filteredOptions.map((optionName, index) => {\n              let className;\n              if (index === activeOption) {\n                className = \"option-active\";\n              }\n              return (\n                <li className={className} key={optionName} onClick={onClick}>\n                  {optionName.first_name}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      } else {\n        optionList = (\n          <div className=\"no-options\">\n            <em>No Option!</em>\n          </div>\n        );\n      }\n    }\n    return (\n      <React.Fragment>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            className=\"search-box\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n          {optionList}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}