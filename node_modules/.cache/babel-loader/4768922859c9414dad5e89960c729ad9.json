{"ast":null,"code":"import axios from \"axios\";\nconst AsyncRequest = axios.create(); // with loaders on client side\n\nconst Request = axios.create(); // no intereptors/loaders\n\nconst LoaderId = \"__CUSTOM_CUBE_LOADER__\";\n\nconst toggleLoader = show => {\n  if (typeof document !== \"undefined\") {\n    if (document.getElementById(LoaderId)) {\n      document.getElementById(LoaderId).style.display = show ? \"block\" : \"none\";\n    }\n  }\n};\n\nAsyncRequest.interceptors.request.use(config => {\n  toggleLoader(true);\n  return config;\n}, error => Promise.reject(error));\nAsyncRequest.interceptors.response.use(config => {\n  toggleLoader(false);\n  return config;\n}, error => {\n  toggleLoader(false);\n  return Promise.reject(error);\n});\nexport const makeAsyncRequest = (method, url, data) => {\n  const options = {\n    method,\n    url,\n    data\n  };\n  return AsyncRequest(options);\n};","map":{"version":3,"sources":["/home/ecom/Project/find-my-freelancer/src/constants/request.js"],"names":["axios","AsyncRequest","create","Request","LoaderId","toggleLoader","show","document","getElementById","style","display","interceptors","request","use","config","error","Promise","reject","response","makeAsyncRequest","method","url","data","options"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,EAArB,C,CAAqC;;AACrC,MAAMC,OAAO,GAAGH,KAAK,CAACE,MAAN,EAAhB,C,CAAgC;;AAEhC,MAAME,QAAQ,GAAG,wBAAjB;;AACA,MAAMC,YAAY,GAAGC,IAAI,IAAI;AAC3B,MAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACnC,QAAIA,QAAQ,CAACC,cAAT,CAAwBJ,QAAxB,CAAJ,EAAuC;AACrCG,MAAAA,QAAQ,CAACC,cAAT,CAAwBJ,QAAxB,EAAkCK,KAAlC,CAAwCC,OAAxC,GAAkDJ,IAAI,GAAG,OAAH,GAAa,MAAnE;AACD;AACF;AACF,CAND;;AAOAL,YAAY,CAACU,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CACEC,MAAM,IAAI;AACRT,EAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,SAAOS,MAAP;AACD,CAJH,EAKEC,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CALX;AAOAd,YAAY,CAACU,YAAb,CAA0BO,QAA1B,CAAmCL,GAAnC,CACEC,MAAM,IAAI;AACRT,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,SAAOS,MAAP;AACD,CAJH,EAKEC,KAAK,IAAI;AACPV,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,SAAOW,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARH;AAWA,OAAO,MAAMI,gBAAgB,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,KAAuB;AACrD,QAAMC,OAAO,GAAG;AACdH,IAAAA,MADc;AAEdC,IAAAA,GAFc;AAGdC,IAAAA;AAHc,GAAhB;AAKA,SAAOrB,YAAY,CAACsB,OAAD,CAAnB;AACD,CAPM","sourcesContent":["import axios from \"axios\";\nconst AsyncRequest = axios.create(); // with loaders on client side\nconst Request = axios.create(); // no intereptors/loaders\n\nconst LoaderId = \"__CUSTOM_CUBE_LOADER__\";\nconst toggleLoader = show => {\n  if (typeof document !== \"undefined\") {\n    if (document.getElementById(LoaderId)) {\n      document.getElementById(LoaderId).style.display = show ? \"block\" : \"none\";\n    }\n  }\n};\nAsyncRequest.interceptors.request.use(\n  config => {\n    toggleLoader(true);\n    return config;\n  },\n  error => Promise.reject(error)\n);\nAsyncRequest.interceptors.response.use(\n  config => {\n    toggleLoader(false);\n    return config;\n  },\n  error => {\n    toggleLoader(false);\n    return Promise.reject(error);\n  }\n);\n\nexport const makeAsyncRequest = (method, url, data) => {\n  const options = {\n    method,\n    url,\n    data\n  };\n  return AsyncRequest(options);\n};\n"]},"metadata":{},"sourceType":"module"}