{"ast":null,"code":"var _jsxFileName = \"/home/ecom/Project/find-my-freelancer/src/components/homepage/search.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Menu, Dropdown, Icon } from \"antd\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  height: 34px;\n  width: 140px;\n  border: 1px solid #aaa;\n  background: #fff;\n`;\nconst SelectTitle = styled.div`\n  display: flex;\n  > p {\n    font-size: 16px;\n    font-weight: bolder;\n    margin-bottom: 0px;\n  }\n`;\nconst SelectOption = styled.ul`\n  background-color: #fff;\n  list-style-type: none;\n  > li {\n    font-size: 16px;\n    font-weight: bolder;\n    border-bottom: 1px dotted #888;\n    padding: 5px;\n    background: #fff;\n  }\n`; // const menu = (\n//   <Menu onClick={onClick}>\n//     <Menu.Item key=\"1\">1st menu item</Menu.Item>\n//     <Menu.Item key=\"2\">2nd memu item</Menu.Item>\n//     <Menu.Item key=\"3\">3rd menu item</Menu.Item>\n//   </Menu>\n// );\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const {\n        selected\n      } = this.state;\n      const userInput = e.currentTarget.value;\n      let filteredSuggestions = []; // Filter our suggestions that don't contain the user's input\n\n      if (selected == \"First\") {\n        filteredSuggestions = suggestions.filter(suggestion => suggestion.first_name.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      } else if (selected == \"Last\") {\n        filteredSuggestions = suggestions.filter(suggestion => suggestion.last_name.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      } else {\n        filteredSuggestions = suggestions.filter(suggestion => suggestion.email.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      } // Update the user input and filtered suggestions, reset the active\n      // suggestion and make sure the suggestions are shown\n\n\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      // Update the user input and reset the rest of the state\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state; // User pressed the enter key, update the input and close the\n      // suggestions\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } // User pressed the up arrow, decrement the index\n      else if (e.keyCode === 38) {\n          if (activeSuggestion === 0) {\n            return;\n          }\n\n          this.setState({\n            activeSuggestion: activeSuggestion - 1\n          });\n        } // User pressed the down arrow, increment the index\n        else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n              return;\n            }\n\n            this.setState({\n              activeSuggestion: activeSuggestion + 1\n            });\n          }\n    };\n\n    this.selectFilter = filter => {\n      this.setState({\n        selected: filter\n      });\n    };\n\n    this.handleSelect = () => {\n      this.setState({\n        showSelect: !this.state.showSelect\n      });\n    };\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      showSelect: false,\n      selected: \"\"\n    };\n  } // Event fired when the input value is changed\n\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    const {\n      selected\n    } = this.state;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"ul\", {\n          class: \"suggestions\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        }, filteredSuggestions.map((suggestion, index) => {\n          let className; // Flag the active suggestion with a class\n\n          if (index === activeSuggestion) {\n            className = \"suggestion-active\";\n          }\n\n          if (selected == \"First\") {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: className,\n              key: index,\n              onClick: onClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }\n            }, suggestion.first_name);\n          } else if (selected == \"Last\") {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: className,\n              key: index,\n              onClick: onClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }\n            }, suggestion.last_name);\n          } else {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: className,\n              key: index,\n              onClick: onClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }\n            }, suggestion.email);\n          }\n        }));\n      } else {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"div\", {\n          class: \"no-suggestions\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }\n        }, \"No suggestions, you're on your own!\"));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, !this.state.showSelect ? /*#__PURE__*/React.createElement(SelectContainer, {\n      onClick: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SelectTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, \"Search By \", selected), /*#__PURE__*/React.createElement(Icon, {\n      title: \"down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }))) : /*#__PURE__*/React.createElement(SelectContainer, {\n      onClick: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SelectOption, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.selectFilter(\"First\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, \"First name\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.selectFilter(\"Last\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.selectFilter(\"Email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, \"Email\"))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }), suggestionsListComponent));\n  }\n\n}\n\nSearch.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nSearch.defaultProps = {\n  suggestions: []\n};\nexport default Search;","map":{"version":3,"sources":["/home/ecom/Project/find-my-freelancer/src/components/homepage/search.js"],"names":["React","Component","Fragment","PropTypes","styled","Menu","Dropdown","Icon","Container","div","SelectContainer","SelectTitle","SelectOption","ul","Search","constructor","props","onChange","e","suggestions","selected","state","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","first_name","toLowerCase","indexOf","last_name","email","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","keyCode","length","selectFilter","handleSelect","showSelect","render","suggestionsListComponent","map","index","className","propTypes","instanceOf","Array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Menu, Dropdown, Icon } from \"antd\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SelectContainer = styled.div`\n  display: flex;\n  height: 34px;\n  width: 140px;\n  border: 1px solid #aaa;\n  background: #fff;\n`;\n\nconst SelectTitle = styled.div`\n  display: flex;\n  > p {\n    font-size: 16px;\n    font-weight: bolder;\n    margin-bottom: 0px;\n  }\n`;\n\nconst SelectOption = styled.ul`\n  background-color: #fff;\n  list-style-type: none;\n  > li {\n    font-size: 16px;\n    font-weight: bolder;\n    border-bottom: 1px dotted #888;\n    padding: 5px;\n    background: #fff;\n  }\n`;\n\n// const menu = (\n//   <Menu onClick={onClick}>\n//     <Menu.Item key=\"1\">1st menu item</Menu.Item>\n//     <Menu.Item key=\"2\">2nd memu item</Menu.Item>\n//     <Menu.Item key=\"3\">3rd menu item</Menu.Item>\n//   </Menu>\n// );\n\nclass Search extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array)\n  };\n\n  static defaultProps = {\n    suggestions: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      showSelect: false,\n      selected: \"\"\n    };\n  }\n\n  // Event fired when the input value is changed\n  onChange = e => {\n    const { suggestions } = this.props;\n    const { selected } = this.state;\n    const userInput = e.currentTarget.value;\n    let filteredSuggestions = [];\n    // Filter our suggestions that don't contain the user's input\n    if (selected == \"First\") {\n      filteredSuggestions = suggestions.filter(\n        suggestion =>\n          suggestion.first_name.toLowerCase().indexOf(userInput.toLowerCase()) >\n          -1\n      );\n    } else if (selected == \"Last\") {\n      filteredSuggestions = suggestions.filter(\n        suggestion =>\n          suggestion.last_name.toLowerCase().indexOf(userInput.toLowerCase()) >\n          -1\n      );\n    } else {\n      filteredSuggestions = suggestions.filter(\n        suggestion =>\n          suggestion.email.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n      );\n    }\n\n    // Update the user input and filtered suggestions, reset the active\n    // suggestion and make sure the suggestions are shown\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n  // Event fired when the user clicks on a suggestion\n  onClick = e => {\n    // Update the user input and reset the rest of the state\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n\n  // Event fired when the user presses a key down\n  onKeyDown = e => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n\n    // User pressed the enter key, update the input and close the\n    // suggestions\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion]\n      });\n    }\n    // User pressed the up arrow, decrement the index\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    }\n    // User pressed the down arrow, increment the index\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  selectFilter = filter => {\n    this.setState({\n      selected: filter\n    });\n  };\n\n  handleSelect = () => {\n    this.setState({\n      showSelect: !this.state.showSelect\n    });\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    const { selected } = this.state;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = (\n          <ul class=\"suggestions\">\n            {filteredSuggestions.map((suggestion, index) => {\n              let className;\n\n              // Flag the active suggestion with a class\n              if (index === activeSuggestion) {\n                className = \"suggestion-active\";\n              }\n              if (selected == \"First\") {\n                return (\n                  <li className={className} key={index} onClick={onClick}>\n                    {suggestion.first_name}\n                  </li>\n                );\n              } else if (selected == \"Last\") {\n                return (\n                  <li className={className} key={index} onClick={onClick}>\n                    {suggestion.last_name}\n                  </li>\n                );\n              } else {\n                return (\n                  <li className={className} key={index} onClick={onClick}>\n                    {suggestion.email}\n                  </li>\n                );\n              }\n            })}\n          </ul>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div class=\"no-suggestions\">\n            <em>No suggestions, you're on your own!</em>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        {!this.state.showSelect ? (\n          <SelectContainer onClick={this.handleSelect}>\n            <SelectTitle>\n              <p>Search By {selected}</p>\n              <Icon title=\"down\" />\n            </SelectTitle>\n          </SelectContainer>\n        ) : (\n          <SelectContainer onClick={this.handleSelect}>\n            <SelectOption>\n              <li onClick={() => this.selectFilter(\"First\")}>First name</li>\n              <li onClick={() => this.selectFilter(\"Last\")}>Last Name</li>\n              <li onClick={() => this.selectFilter(\"Email\")}>Email</li>\n            </SelectOption>\n          </SelectContainer>\n        )}\n        {/* <Dropdown overlay={menu}>\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n              Hover me, Click menu item <Icon title=\"down\" />\n            </a>\n          </Dropdown> */}\n        <Container>\n          <input\n            type=\"text\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n          {suggestionsListComponent}\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}