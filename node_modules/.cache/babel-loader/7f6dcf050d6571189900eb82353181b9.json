{"ast":null,"code":"var _jsxFileName = \"/home/ecom/Project/find-my-freelancer/src/components/homepage/search.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Menu, Dropdown, Icon } from \"antd\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectOption = styled.div`\n  display: flex;\n  height: 40px;\n  width: 80px;\n  border: 1px solid #aaa;\n`;\nconst menu = /*#__PURE__*/React.createElement(Menu, {\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, \"1st menu item\"), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, \"2nd memu item\"), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, \"3rd menu item\"));\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value; // Filter our suggestions that don't contain the user's input\n\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.first_name.toLowerCase().indexOf(userInput.toLowerCase()) > -1); // Update the user input and filtered suggestions, reset the active\n      // suggestion and make sure the suggestions are shown\n\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      // Update the user input and reset the rest of the state\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state; // User pressed the enter key, update the input and close the\n      // suggestions\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } // User pressed the up arrow, decrement the index\n      else if (e.keyCode === 38) {\n          if (activeSuggestion === 0) {\n            return;\n          }\n\n          this.setState({\n            activeSuggestion: activeSuggestion - 1\n          });\n        } // User pressed the down arrow, increment the index\n        else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n              return;\n            }\n\n            this.setState({\n              activeSuggestion: activeSuggestion + 1\n            });\n          }\n    };\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      showSelect: \"\"\n    };\n  } // Event fired when the input value is changed\n\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"ul\", {\n          class: \"suggestions\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }\n        }, filteredSuggestions.map((suggestion, index) => {\n          let className; // Flag the active suggestion with a class\n\n          if (index === activeSuggestion) {\n            className = \"suggestion-active\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: className,\n            key: index,\n            onClick: onClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }\n          }, suggestion.first_name);\n        }));\n      } else {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"div\", {\n          class: \"no-suggestions\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }\n        }, \"No suggestions, you're on your own!\"));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SelectOption, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      overlay: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"ant-dropdown-link\",\n      onClick: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"Hover me \", /*#__PURE__*/React.createElement(Icon, {\n      title: \"arrow-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 24\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }), suggestionsListComponent));\n  }\n\n}\n\nSearch.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nSearch.defaultProps = {\n  suggestions: []\n};\nexport default Search;","map":{"version":3,"sources":["/home/ecom/Project/find-my-freelancer/src/components/homepage/search.js"],"names":["React","Component","Fragment","PropTypes","styled","Menu","Dropdown","Icon","Container","div","SelectOption","menu","onClick","Search","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","first_name","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","innerText","onKeyDown","state","keyCode","length","showSelect","render","suggestionsListComponent","map","index","className","preventDefault","propTypes","instanceOf","Array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Menu, Dropdown, Icon } from \"antd\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SelectOption = styled.div`\n  display: flex;\n  height: 40px;\n  width: 80px;\n  border: 1px solid #aaa;\n`;\n\nconst menu = (\n  <Menu onClick={onClick}>\n    <Menu.Item key=\"1\">1st menu item</Menu.Item>\n    <Menu.Item key=\"2\">2nd memu item</Menu.Item>\n    <Menu.Item key=\"3\">3rd menu item</Menu.Item>\n  </Menu>\n);\n\nclass Search extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array)\n  };\n\n  static defaultProps = {\n    suggestions: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      showSelect: \"\"\n    };\n  }\n\n  // Event fired when the input value is changed\n  onChange = e => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n\n    // Filter our suggestions that don't contain the user's input\n    const filteredSuggestions = suggestions.filter(\n      suggestion =>\n        suggestion.first_name.toLowerCase().indexOf(userInput.toLowerCase()) >\n        -1\n    );\n\n    // Update the user input and filtered suggestions, reset the active\n    // suggestion and make sure the suggestions are shown\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n  // Event fired when the user clicks on a suggestion\n  onClick = e => {\n    // Update the user input and reset the rest of the state\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n\n  // Event fired when the user presses a key down\n  onKeyDown = e => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n\n    // User pressed the enter key, update the input and close the\n    // suggestions\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion]\n      });\n    }\n    // User pressed the up arrow, decrement the index\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    }\n    // User pressed the down arrow, increment the index\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = (\n          <ul class=\"suggestions\">\n            {filteredSuggestions.map((suggestion, index) => {\n              let className;\n\n              // Flag the active suggestion with a class\n              if (index === activeSuggestion) {\n                className = \"suggestion-active\";\n              }\n\n              return (\n                <li className={className} key={index} onClick={onClick}>\n                  {suggestion.first_name}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div class=\"no-suggestions\">\n            <em>No suggestions, you're on your own!</em>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        <SelectOption>\n          <Dropdown overlay={menu}>\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n              Hover me <Icon title=\"arrow-down\" />\n            </a>\n          </Dropdown>\n        </SelectOption>\n        <Container>\n          <input\n            type=\"text\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n          {suggestionsListComponent}\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}